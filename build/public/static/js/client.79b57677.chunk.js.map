{"version":3,"sources":["webpack:///./src/components/button/Profile.jsx","webpack:///./src/components/button/Search.jsx","webpack:///./src/components/HeaderSearchBar.jsx","webpack:///./src/components/button/CreatePost.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/assets/icon.jsx","webpack:///./src/lib/cookie.js","webpack:///./src/assets/img/modify.svg","webpack:///./src/components/button/index.jsx","webpack:///./src/graphql/mutation/post.js","webpack:///./src/components/Input.jsx","webpack:///./src/components/Form.jsx","webpack:///./src/assets/img/logout.svg","webpack:///./src/App.jsx","webpack:///./src/components/Loader.jsx","webpack:///./src/context/reducer.js","webpack:///./src/context/index.jsx","webpack:///./src/components/button/Category.jsx","webpack:///./src/components/Avatar.jsx","webpack:///./src/lib/error.js","webpack:///./src/assets/img/speaker.svg","webpack:///./src/assets/img/trash.svg","webpack:///./src/lib/apollo.js","webpack:///./src/graphql/mutation/user.js","webpack:///./src/components/modal/SignInPresenter.jsx","webpack:///./src/components/modal/SignInContainer.jsx","webpack:///./src/components/modal/SignUpPresenter.jsx","webpack:///./src/components/modal/SignUpContainer.jsx","webpack:///./src/components/modal/Auth.jsx","webpack:///./src/context/action.js","webpack:///./src/client.js","webpack:///./src/hooks/index.js","webpack:///./src/lib/responsive.js","webpack:///./src/components/Editor.jsx","webpack:///./src/components/modal/SetPostPresenter.jsx","webpack:///./src/components/modal/SetPostContainer.jsx","webpack:///./src/assets/img/eye.svg","webpack:///./src/assets/img/comment.svg"],"names":["ProfileBtn","dispatch","useDispatch","useSelector","id","avatar","useState","isLoggedIn","setIsLoggedIn","handleClick","useCallback","getStorage","TOKEN_KEY","window","confirm","deleteStorage","type","SET_ME","nickname","email","isMaster","SHOW_LOGIN_MODAL","useEffect","className","Avatar","src","size","userId","onClick","SearchBtn","isShowSearchBar","HIDE_SEARCH_BAR","SHOW_SEARCH_BAR","title","HeaderSearchBar","history","useHistory","searchKeyword","setSearchKeyword","$search","useRef","handleChangeSearchKeyword","e","target","value","handleSearchSubmit","preventDefault","alert","push","current","focus","onSubmit","label","placeholder","onChange","autoComplete","ref","CreatePostBtn","SHOW_POST_MODAL","Header","to","Search","CreatePost","Profile","Thumbnail","style","xmlns","viewBox","width","height","d","Arrow","HeartEmpty","role","fill","HeartFull","Add","Home","key","content","process","browser","Cookies","get","JSON","parse","setStorage","isSet","set","stringify","expires","isDelete","remove","module","exports","Button","children","props","CREATE_POST","gql","LIKE_POST","UNLIKE_POST","Input","forwardRef","setValue","isAlone","Label","htmlFor","Select","FormInput","Feed","loadable","SearchPostPage","SearchCategoryPage","User","NoMatch","AsideMypage","AsideRecommandCategory","App","isShowLoginModal","isShowAddPostModal","useResize","breakpoint","SET_BREAKPOINT","exact","path","component","Loader","color","visible","reducer","state","action","HIDE_LOGIN_MODAL","activePost","category","HIDE_POST_MODAL","SHOW_POST_DROPDOWN","isShowPostDropdown","activeDropdown","offsetX","offsetY","HIDE_POST_DROPDOWN","Context","createContext","DispatchContext","initialState","slidesToShow","ContextProvider","context","useReducer","Provider","useContext","Error","CategoryBtn","isGap","aria-label","tabIndex","alt","graphqlError","error","message","apolloClient","createApolloClient","httpLink","createHttpLink","uri","errorLink","onError","graphQLErrors","networkError","map","extensions","console","log","status","authLink","setContext","_","headers","token","Authorization","ApolloClient","connectToDevTools","ssrMode","link","ApolloLink","from","cache","InMemoryCache","restore","__APOLLO_STATE__","initializeApollo","_apolloClient","existingCache","extract","global","fetch","SIGN_IN","SIGN_UP","SignInPresenter","loading","password","Form","required","SignInContainer","useMutation","login","useInput","handleSubmit","a","variables","logIn","data","SignUpPresenter","uploadLoading","signUpLoading","preview","$file","onChangeFile","onClickFile","hidden","accept","SignUpContainer","setAction","useLazyAxios","call","setPreview","setAvatar","signUp","handleChangeFile","files","file","formData","FormData","append","method","url","reader","FileReader","onloadend","result","readAsDataURL","response","handleClickFile","node","click","length","addUser","Auth","handleClose","Modal","onHide","show","animation","contentClassName","closeButton","Title","Body","container","document","getElementById","loadableReady","hydrate","client","__CONTEXT_STATE__","defaultValue","where","replace","setLoading","options","axios","setBreakpoint","handleResize","innerWidth","getBreakpoint","addEventListener","dispatchEvent","Event","removeEventListener","Editor","require","PostEditor","initialValue","previewStyle","initialEditType","useCommandShortcut","$editor","handleChange","instance","getInstance","markdown","getMarkdown","description","el","innerText","plugins","codeSyntaxHightlight","hljs","hooks","addImageBlobHook","blob","callback","SetPostPresenter","setContent","onClose","marginLeft","flex","Category","Footer","variant","SetPostContainer","_content","create","addPost"],"mappings":"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","file":"static/js/client.79b57677.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Profile } from \"../../assets/icon\";\nimport { useDispatch, useSelector } from \"../../context\";\nimport { SHOW_LOGIN_MODAL, SET_ME } from \"../../context/action\";\nimport { TOKEN_KEY, getStorage, deleteStorage } from \"../../lib/cookie\";\nimport Avatar from \"../Avatar\";\n\n/**\n * 내 정보 아이콘 컴포넌트\n *\n */\nconst ProfileBtn = () => {\n    const dispatch = useDispatch();\n\n    const { id, avatar } = useSelector();\n    // 로그인 여부\n    const [isLoggedIn, setIsLoggedIn] = useState(id !== null);\n    // 클릭 핸들러\n    const handleClick = useCallback(() => {\n        // 토큰 가져오기\n        const token = getStorage(TOKEN_KEY);\n\n        if (token) {\n            const tf = window.confirm(\"로그아웃 하시겠어요?\");\n\n            if (tf) {\n                // 토큰 삭제\n                deleteStorage(TOKEN_KEY);\n                // 로컬 상태 갱신\n                dispatch({\n                    type: SET_ME,\n                    id: null,\n                    nickname: null,\n                    email: null,\n                    avatar: null,\n                    isMaster: false\n                });\n            }\n        } else {\n            // 로그인 모달 보이기\n            dispatch({\n                type: SHOW_LOGIN_MODAL\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        // 로그인 여부 변경\n        setIsLoggedIn(id !== null);\n    }, [id]);\n\n    return isLoggedIn ? (\n        <div className=\"d-flex justify-content-start\">\n            <Avatar src={avatar} size={30} userId={id} />\n        </div>\n    ) : (\n        <button onClick={handleClick}>\n            <Profile />\n            <span className=\"a11y-hidden\">로그인 하기</span>\n        </button>\n    );\n};\n\nexport default ProfileBtn;\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"../../context\";\nimport { SHOW_SEARCH_BAR, HIDE_SEARCH_BAR } from \"../../context/action\";\nimport { Search } from \"../../assets/icon\";\n\n/**\n * 검색 아이콘 컴포넌트\n *\n */\nconst SearchBtn = () => {\n    const dispatch = useDispatch();\n\n    const { isShowSearchBar } = useSelector();\n    // 클릭 핸들러\n    const handleClick = useCallback(() => {\n        // 검색바 보이기 / 숨기기\n        dispatch({\n            type: isShowSearchBar ? HIDE_SEARCH_BAR : SHOW_SEARCH_BAR\n        });\n    }, [isShowSearchBar]);\n\n    return (\n        <button onClick={handleClick} type=\"button\" title=\"검색\">\n            <Search />\n            <span className=\"a11y-hidden\">\n                {isShowSearchBar ? \"검색바 닫기\" : \"검색바 열기\"}\n            </span>\n        </button>\n    );\n};\n\nexport default SearchBtn;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"../context\";\nimport { HIDE_SEARCH_BAR } from \"../context/action\";\nimport { Label } from \"./Form\";\n\n/**\n * * 검색 바 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst HeaderSearchBar = () => {\n    /**\n     * history 객체 활성화\n     */\n    const history = useHistory();\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 검색어 상태 관리 모듈 활성화\n     */\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\n    /**\n     * search input element\n     */\n    const $search = useRef(null);\n    /**\n     * 검색어 변경 핸들러\n     */\n    const handleChangeSearchKeyword = useCallback((e) => {\n        setSearchKeyword(e.target.value);\n    }, []);\n    /**\n     * 검색 요청 핸들러\n     */\n    const handleSearchSubmit = useCallback(\n        (e) => {\n            e.preventDefault();\n            /**\n             * 검색어 입력을 안한 경우\n             */\n            if (!searchKeyword) {\n                return alert(\"검색어를 입력하세요\");\n            }\n            /**\n             * 페이지 이동\n             */\n            history.push(`/search/${searchKeyword}`);\n            /**\n             * 검색바 숨기기\n             */\n            dispatch({\n                type: HIDE_SEARCH_BAR\n            });\n        },\n        [searchKeyword]\n    );\n    /**\n     * 라이프 사이클 모듈 활성화\n     */\n    useEffect(() => {\n        /**\n         * 검색창 포커싱\n         */\n        $search.current.focus();\n    }, []);\n\n    return (\n        <form className=\"fr-header__search__form\" onSubmit={handleSearchSubmit}>\n            <Label\n                id=\"search\"\n                value={searchKeyword}\n                label=\"검색어를 입력하세요.\"\n            />\n            <div className=\"fr-header__search__input-wrapper\">\n                <input\n                    className=\"fr-form__input fr-form__input--alone fr-header__search__input\"\n                    placeholder=\"검색어를 입력하세요.\"\n                    id=\"search\"\n                    value={searchKeyword}\n                    onChange={handleChangeSearchKeyword}\n                    autoComplete=\"off\"\n                    ref={$search}\n                />\n            </div>\n        </form>\n    );\n};\n\nexport default HeaderSearchBar;\n","import React, { useCallback } from \"react\";\n// import { useHistory } from \"react-router-dom\";\nimport { Add } from \"../../assets/icon\";\nimport { useDispatch } from \"../../context\";\nimport { SHOW_LOGIN_MODAL, SHOW_POST_MODAL } from \"../../context/action\";\nimport { TOKEN_KEY, getStorage } from \"../../lib/cookie\";\n\n/**\n * 헤더 게시물 추가 컴포넌트\n *\n */\nconst CreatePostBtn = () => {\n    // const history = useHistory();\n\n    const dispatch = useDispatch();\n    // 클릭 핸들러\n    const handleClick = useCallback(() => {\n        // 로그인 체크\n        const token = getStorage(TOKEN_KEY);\n\n        if (token === null) {\n            return dispatch({\n                type: SHOW_LOGIN_MODAL\n            });\n        }\n\n        // history.push(\"/create_post\");\n        dispatch({\n            type: SHOW_POST_MODAL\n        });\n    }, []);\n\n    return (\n        <button\n            className=\"fr-header__post\"\n            onClick={handleClick}\n            title=\"포스트 등록\"\n        >\n            <Add />\n            <span className=\"a11y-hidden\">포스트 등록</span>\n        </button>\n    );\n};\n\nexport default CreatePostBtn;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"../context\";\nimport ProfileBtn from \"./button/Profile\";\nimport SearchBtn from \"./button/Search\";\nimport HeaderSearchBar from \"./HeaderSearchBar\";\nimport CreatePostBtn from \"./button/CreatePost\";\n// import HeaderNotice from \"./HeaderNotice\";\nimport { Home } from \"../assets/icon\";\n\n/**\n * 공통 헤더 컴포넌트\n *\n */\nconst Header = () => {\n    const displayName = \"fr-header\";\n\n    const { isShowSearchBar } = useSelector();\n\n    return (\n        <div className={`${displayName}__wrapper`}>\n            <header className={`${displayName}`}>\n                <div className={`${displayName}__column`}>\n                    <Link to=\"/\">\n                        <Home />\n                    </Link>\n                    {/* <HeaderNotice /> */}\n                </div>\n                <div className={`${displayName}__column`}>\n                    <SearchBtn />\n                    <CreatePostBtn />\n                    <ProfileBtn />\n                </div>\n            </header>\n            {isShowSearchBar && (\n                <div className={`${displayName}__search-wrapper`}>\n                    <HeaderSearchBar />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\n\n/**\n * * Default svg size\n */\nconst size = 24;\n\n/**\n * Thumbnail icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Thumbnail = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        viewBox=\"0 0 24 24\"\n        width={size}\n        height={size}\n    >\n        <path d=\"M19.5 12c-2.483 0-4.5 2.015-4.5 4.5s2.017 4.5 4.5 4.5 4.5-2.015 4.5-4.5-2.017-4.5-4.5-4.5zm2.5 5h-2v2h-1v-2h-2v-1h2v-2h1v2h2v1zm-18 0l4-5.96 2.48 1.96 2.52-4 1.853 2.964c-1.271 1.303-1.977 3.089-1.827 5.036h-9.026zm10.82 4h-14.82v-18h22v7.501c-.623-.261-1.297-.422-2-.476v-5.025h-18v14h11.502c.312.749.765 1.424 1.318 2zm-9.32-11c-.828 0-1.5-.671-1.5-1.5 0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5c0 .829-.672 1.5-1.5 1.5z\" />\n    </svg>\n);\n\n/**\n * Thumbnail icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Arrow = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        className=\"activeEscape\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\" />\n    </svg>\n);\n\n/**\n * Heart empty icon component\n *\n * @param props.style Svg style\n */\nexport const HeartEmpty = () => (\n    <svg\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        fill=\"crimson\"\n        className=\"activeEscape\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 9.229c.234-1.12 1.547-6.229 5.382-6.229 2.22 0 4.618 1.551 4.618 5.003 0 3.907-3.627 8.47-10 12.629-6.373-4.159-10-8.722-10-12.629 0-3.484 2.369-5.005 4.577-5.005 3.923 0 5.145 5.126 5.423 6.231zm-12-1.226c0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-7.962-9.648-9.028-12-3.737-2.338-5.262-12-4.27-12 3.737z\" />\n    </svg>\n);\n\n/**\n * Heart full icon component\n *\n * @param props.style Svg style\n */\nexport const HeartFull = () => (\n    <svg\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        fill=\"crimson\"\n        className=\"activeEscape\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z\" />\n    </svg>\n);\n\n/**\n * Comment icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Comment = ({ style }) => (\n    <img\n        src={require(\"./img/comment.svg\")}\n        alt=\"comment icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * More icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const More = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\" />\n    </svg>\n);\n\n/**\n * Upload icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Upload = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M10 9h-6l8-9 8 9h-6v11h-4v-11zm11 11v2h-18v-2h-2v4h22v-4h-2z\" />\n    </svg>\n);\n\n/**\n * Bell icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Bell = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M15 21c0 1.598-1.392 3-2.971 3s-3.029-1.402-3.029-3h6zm.137-17.055c-.644-.374-1.042-1.07-1.041-1.82v-.003c.001-1.172-.938-2.122-2.096-2.122s-2.097.95-2.097 2.122v.003c.001.751-.396 1.446-1.041 1.82-4.668 2.709-1.985 11.715-6.862 13.306v1.749h20v-1.749c-4.877-1.591-2.193-10.598-6.863-13.306zm-3.137-2.945c.552 0 1 .449 1 1 0 .552-.448 1-1 1s-1-.448-1-1c0-.551.448-1 1-1zm-6.451 16c1.189-1.667 1.605-3.891 1.964-5.815.447-2.39.869-4.648 2.354-5.509 1.38-.801 2.956-.76 4.267 0 1.485.861 1.907 3.119 2.354 5.509.359 1.924.775 4.148 1.964 5.815h-12.903z\" />\n    </svg>\n);\n\n/**\n * Next icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Next = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\" />\n    </svg>\n);\n\n/**\n * Add icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Add = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M7.127 22.564l-7.126 1.436 1.438-7.125 5.688 5.689zm-4.274-7.104l5.688 5.689 15.46-15.46-5.689-5.689-15.459 15.46z\" />\n    </svg>\n);\n\n/**\n * AddPost icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const AddPost = ({ style }) => (\n    <svg\n        style={style}\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n    >\n        <g>\n            <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4zM14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2z\"></path>\n        </g>\n    </svg>\n);\n\n/**\n * Profile icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Profile = ({ style }) => (\n    <svg viewBox=\"0 0 15 18.9\" width={size} height={size} style={style}>\n        <path d=\"M7.5 8.8c2.6 0 4.7-2 4.7-4.4S10.1 0 7.5 0 2.8 2 2.8 4.4C2.9 6.8 5 8.8 7.5 8.8zm0 1.5c-4.2 0-7.5 3.2-7.5 7.4 0 .6.5 1.2 1.2 1.2h12.6c.7 0 1.2-.5 1.2-1.2 0-4.1-3.3-7.4-7.5-7.4z\"></path>\n    </svg>\n);\n\n/**\n * Search icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Search = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        style={style}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z\" />\n    </svg>\n);\n\n/**\n * MinimizeSearch icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const MinimizeSearch = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        style={style}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M13 10h-8v-2h8v2zm8.172 14l-7.387-7.387c-1.388.874-3.024 1.387-4.785 1.387-4.971 0-9-4.029-9-9s4.029-9 9-9 9 4.029 9 9c0 1.761-.514 3.398-1.387 4.785l7.387 7.387-2.828 2.828zm-12.172-8c3.859 0 7-3.14 7-7s-3.141-7-7-7-7 3.14-7 7 3.141 7 7 7z\" />\n    </svg>\n);\n\n/**\n * Filter icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Filter = ({ style }) => (\n    <svg\n        viewBox=\"0 0 24 24\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n        width={size}\n        height={size}\n        style={style}\n    >\n        <g>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n            <path d=\"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\"></path>\n        </g>\n    </svg>\n);\n\n/**\n * Collapse icon component\n *\n * @Svg\n * @param props.style Svg style\n */\nexport const Collapse = ({ style }) => (\n    <svg\n        width={size}\n        height={size}\n        style={style}\n        version=\"1.1\"\n        viewBox=\"0 0 20 20\"\n        x=\"0px\"\n        y=\"0px\"\n    >\n        <g>\n            <path d=\"M16 16V4h2v12h-2zM6 9l2.501-2.5-1.5-1.5-5 5 5 5 1.5-1.5-2.5-2.5h8V9H6z\"></path>\n        </g>\n    </svg>\n);\n\n/**\n * Home icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Home = ({ style }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size}\n        height={size}\n        style={style}\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M20 7.093v-5.093h-3v2.093l3 3zm4 5.907l-12-12-12 12h3v10h7v-5h4v5h7v-10h3zm-5 8h-3v-5h-8v5h-3v-10.26l7-6.912 7 6.99v10.182z\" />\n    </svg>\n);\n\n/**\n * View icon component\n *\n * @Img\n * @param props.style style\n */\nexport const View = ({ style }) => (\n    <img\n        src={require(\"./img/eye.svg\")}\n        alt=\"view icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Trash icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Trash = ({ style }) => (\n    <img\n        src={require(\"./img/trash.svg\")}\n        alt=\"trash icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Modify icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Modify = ({ style }) => (\n    <img\n        src={require(\"./img/modify.svg\")}\n        alt=\"modify icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Notice icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Notice = ({ style }) => (\n    <img\n        src={require(\"./img/speaker.svg\")}\n        alt=\"notice icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n\n/**\n * Logout icon component\n *\n * @Img\n * @param props.style style\n */\nexport const Logout = ({ style }) => (\n    <img\n        src={require(\"./img/logout.svg\")}\n        alt=\"logout icon\"\n        style={style}\n        width={size}\n        height={size}\n    />\n);\n","import Cookies from \"js-cookie\";\n\n// 토큰 키\nexport const TOKEN_KEY = \"token__frisklog\";\n// 네비게이션 확장 여부 키\nexport const COLLAPSE_KEY = \"collapse__frisklog\";\n\n/**\n * Cookie getter\n *\n * @param {string} key cookie key\n */\nexport const getStorage = (key) => {\n    let content = null;\n\n    if (process.browser && Cookies.get(key)) {\n        content = JSON.parse(Cookies.get(key));\n    }\n\n    return content;\n};\n\n/**\n * Cookie setter\n *\n * @param {string} key cookie key\n */\nexport const setStorage = (key, value) => {\n    let isSet = false;\n\n    if (process.browser) {\n        Cookies.set(key, JSON.stringify(value), { expires: 365 });\n        isSet = true;\n    }\n\n    return isSet;\n};\n\n/**\n * Cookie delete\n *\n * @param {string} key cookie key\n */\nexport const deleteStorage = (key) => {\n    let isDelete = false;\n\n    if (process.browser) {\n        Cookies.remove(key);\n        isDelete = true;\n    }\n\n    return isDelete;\n};\n","module.exports = __webpack_public_path__ + \"static/media/modify.50e0186d.svg\";","import React from \"react\";\n\n/**\n * 공통 버튼 컴포넌트\n *\n */\nconst Button = ({ children, ...props }) => (\n    <button className=\"fr-btn fr-link\" {...props}>\n        {children}\n    </button>\n);\nexport default Button;\n","import { gql } from \"@apollo/client\";\n\n/**\n * 게시물 추가\n *\n * @deprecated $title       제목\n * @deprecated $description 소개\n * @param $content     내용\n * @param $category    카테고리\n * @deprecated $thumbnail   썸네일\n * @param $isDev       개발중 여부\n */\nexport const CREATE_POST = gql`\n    mutation addPost(\n        # $title: String\n        # $description: String\n        $content: String\n        $category: String\n        # $thumbnail: String\n        $isDev: Boolean\n    ) {\n        addPost(\n            # title: $title\n            # description: $description\n            content: $content\n            category: $category\n            # thumbnail: $thumbnail\n            isDev: $isDev\n        )\n    }\n`;\n\n/**\n * 게시물 수정\n *\n * @param $id          게시물 ID\n * @deprecated $title       제목\n * @deprecated $description 소개\n * @param $content     내용\n * @param $category    카테고리\n * @deprecated $thumbnail   썸네일\n * @param $isDev       개발중 여부\n */\nexport const UPDATE_POST = gql`\n    mutation updatePost(\n        $id: String!\n        # $title: String\n        # $description: String\n        $content: String\n        $category: String\n        # $thumbnail: String\n        $isDev: Boolean\n    ) {\n        updatePost(\n            id: $id\n            # title: $title\n            # description: $description\n            content: $content\n            category: $category\n            # thumbnail: $thumbnail\n            isDev: $isDev\n        )\n    }\n`;\n\n/**\n * 게시물 삭제\n *\n * @param $id    게시물 ID\n * @param $isDev 개발중 여부\n */\nexport const DELETE_POST = gql`\n    mutation deletePost($id: String!, $isDev: Boolean) {\n        deletePost(id: $id, isDev: $isDev)\n    }\n`;\n\n/**\n * 게시물 좋아요\n *\n * @param $id    게시물 ID\n * @param $isDev 개발중 여부\n */\nexport const LIKE_POST = gql`\n    mutation likePost($id: String!, $isDev: Boolean) {\n        likePost(id: $id, isDev: $isDev)\n    }\n`;\n\n/**\n * 게시물 좋아요 취소\n *\n * @param $id    게시물 ID\n * @param $isDev 개발중 여부\n */\nexport const UNLIKE_POST = gql`\n    mutation unlikePost($id: String!, $isDev: Boolean) {\n        unlikePost(id: $id, isDev: $isDev)\n    }\n`;\n","import React, { forwardRef } from \"react\";\n\n/**\n * * 공통 input 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst Input = forwardRef(({ setValue, isAlone, ...props }, ref) => (\n    <input\n        className={`fr-form__input ${isAlone ? \"fr-form__input--alone\" : \"\"}`}\n        ref={ref}\n        {...props}\n    />\n));\n\nexport default Input;\n","import React from \"react\";\nimport Input from \"./Input\";\n\nconst displayName = \"fr-form\";\n\nexport const Label = ({ id, label, value }) => (\n    <label\n        htmlFor={id}\n        className={`${displayName}__label ${displayName}__label--state-${\n            value ? \"typing\" : \"empty\"\n        }`}\n    >\n        {label}\n    </label>\n);\n\nexport const TextArea = ({ children, setValue, ...props }) => (\n    <textarea className={`${displayName}__textarea`} {...props}>\n        {children}\n    </textarea>\n);\n\nexport const Select = ({ children, setValue, ...props }) => (\n    <select className={`${displayName}__select`} {...props}>\n        {children}\n    </select>\n);\n\nexport const FormInput = ({ children, ...props }) => (\n    <div className={`${displayName}__input-wrapper`}>\n        <Label {...props} />\n        <Input {...props} />\n        {children}\n    </div>\n);\n\nexport const FormTextArea = ({ children, ...props }) => (\n    <div className={`${displayName}__input-wrapper`}>\n        <Label {...props} />\n        <TextArea {...props} />\n        {children}\n    </div>\n);\n","module.exports = __webpack_public_path__ + \"static/media/logout.25537bfc.svg\";","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\nimport Header from \"./components/Header\";\nimport AuthModal from \"./components/modal/Auth\";\nimport PostModal from \"./components/modal/SetPostContainer\";\nimport { useDispatch, useSelector } from \"./context\";\nimport { SET_BREAKPOINT } from \"./context/action\";\nimport { useResize } from \"./hooks\";\n// import { Dropdown, DropdownItem } from \"./components/Dropdown\";\n// import UpdatePostBtn from \"./components/button/UpdatePost\";\n\nimport \"./sass/main.scss\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\";\nimport \"highlight.js/styles/atom-one-dark.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"github-markdown-css/github-markdown.css\";\n// page\nconst Feed = loadable(() => import(\"./pages/feed\"));\nconst SearchPostPage = loadable(() => import(\"./pages/search/SearchPostPage\"));\nconst SearchCategoryPage = loadable(() =>\n    import(\"./pages/search/SearchCategoryPage\")\n);\n// const Post = loadable(() => import(\"./pages/post\"));\n// const CreatePostPage = loadable(() => import(\"./pages/post/CreatePostPage\"));\n// const UpdatePostPage = loadable(() => import(\"./pages/post/UpdatePostPage\"));\nconst User = loadable(() => import(\"./pages/user\"));\nconst NoMatch = loadable(() => import(\"./pages/404\"));\n// aside\nconst AsideMypage = loadable(() => import(\"./components/aside/Mypage\"));\nconst AsideRecommandCategory = loadable(() =>\n    import(\"./components/aside/RecommandCategory\")\n);\n\nconst App = () => {\n    const displayName = \"fr-app\";\n\n    const dispatch = useDispatch();\n\n    const { isShowLoginModal, isShowAddPostModal } = useSelector();\n\n    const [breakpoint] = useResize();\n\n    useEffect(() => {\n        dispatch({\n            type: SET_BREAKPOINT,\n            breakpoint\n        });\n    }, [breakpoint]);\n\n    return (\n        <div className={`${displayName}__wrapper`}>\n            <Header />\n            <section className={`${displayName}`} id=\"main\">\n                <div className={`${displayName}__body`}>\n                    <div className=\"fr-main__wrapper\">\n                        <main className=\"fr-main\">\n                            {/* <Dropdown>\n                                <DropdownItem>\n                                    <UpdatePostBtn />\n                                </DropdownItem>\n                                <DropdownItem>삭제</DropdownItem>\n                            </Dropdown> */}\n                            <Switch>\n                                <Route exact path=\"/\" component={Feed} />\n                                {/* <Route\n                                    exact\n                                    path=\"/create_post\"\n                                    component={CreatePostPage}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/update_post/:id\"\n                                    component={UpdatePostPage}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/post/:id\"\n                                    component={Post}\n                                /> */}\n                                <Route\n                                    exact\n                                    path=\"/user/:id\"\n                                    component={User}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/search/:query\"\n                                    component={SearchPostPage}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/category/:content\"\n                                    component={SearchCategoryPage}\n                                />\n                                <Route component={NoMatch} />\n                            </Switch>\n                        </main>\n                    </div>\n                    <div className=\"fr-aside__wrapper\">\n                        <aside className=\"fr-aside\">\n                            <Switch>\n                                <Route\n                                    exact\n                                    path=\"/user/:id\"\n                                    component={AsideMypage}\n                                />\n                                <Route component={AsideRecommandCategory} />\n                            </Switch>\n                        </aside>\n                    </div>\n                </div>\n            </section>\n            {isShowLoginModal && <AuthModal />}\n            {isShowAddPostModal && <PostModal />}\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport Spinner from \"react-loader-spinner\";\n\n/**\n * 공통 로더 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst Loader = () => (\n    <div className=\"fr-loader\">\n        <Spinner\n            type=\"ThreeDots\"\n            color=\"#4142DD\"\n            height={80}\n            width={80}\n            visible={true}\n        />\n    </div>\n);\n\nexport default Loader;\n","import {\n    SET_ME,\n    // SHOW_NOTICE_MODAL,\n    // HIDE_NOTICE_MODAL,\n    SHOW_POST_MODAL,\n    HIDE_POST_MODAL,\n    SHOW_LOGIN_MODAL,\n    HIDE_LOGIN_MODAL,\n    SHOW_SEARCH_BAR,\n    HIDE_SEARCH_BAR,\n    // SHOW_FILTER_BAR,\n    // HIDE_FILTER_BAR,\n    // SEARCH_POST,\n    // EXPAND_NAVIGATION,\n    // CONTRACT_NAVIGATION,\n    // SET_IS_MOBILE,\n    SET_BREAKPOINT,\n    SHOW_POST_DROPDOWN,\n    HIDE_POST_DROPDOWN\n} from \"./action\";\n\n/**\n * 로컬 상태 관리 모듈\n *\n * @param state {*} 상태\n * @param action {*} 액션\n */\nexport default function reducer(state, action) {\n    switch (action.type) {\n        case SET_ME:\n            return {\n                ...state,\n                id: action.id,\n                nickname: action.nickname,\n                email: action.email,\n                avatar: action.avatar,\n                isMaster: action.isMaster\n            };\n        // case SHOW_NOTICE_MODAL:\n        //     return {\n        //         ...state,\n        //         isShowNoticeModal: true,\n        //         activeNotice: {\n        //             id: action.id,\n        //             action: action.action,\n        //             actionText: action.actionText,\n        //             title: action.title,\n        //             description: action.description\n        //         }\n        //     };\n        // case HIDE_NOTICE_MODAL:\n        //     return {\n        //         ...state,\n        //         isShowNoticeModal: false,\n        //         activeNotice: {\n        //             id: \"\",\n        //             action: \"wait\",\n        //             actionText: \"비활성화\",\n        //             title: \"\",\n        //             description: \"\"\n        //         }\n        //     };\n\n        case SHOW_SEARCH_BAR:\n            return {\n                ...state,\n                isShowSearchBar: true\n            };\n        case HIDE_SEARCH_BAR:\n            return {\n                ...state,\n                isShowSearchBar: false\n            };\n        // case SHOW_FILTER_BAR:\n        //     return {\n        //         ...state,\n        //         isShowFilterBar: true\n        //     };\n        // case HIDE_FILTER_BAR:\n        //     return {\n        //         ...state,\n        //         isShowFilterBar: false\n        //     };\n        case SHOW_LOGIN_MODAL:\n            return {\n                ...state,\n                isShowLoginModal: true\n            };\n        case HIDE_LOGIN_MODAL:\n            return {\n                ...state,\n                isShowLoginModal: false\n            };\n        case SHOW_POST_MODAL:\n            return {\n                ...state,\n                isShowAddPostModal: true,\n                activePost: {\n                    id: action.id ? action.id : \"\",\n                    content: action.content ? action.content : \"\",\n                    category: action.category ? action.category : \"\"\n                }\n            };\n        case HIDE_POST_MODAL:\n            return {\n                ...state,\n                isShowAddPostModal: false,\n                activePost: {\n                    id: \"\",\n                    content: \"\",\n                    category: \"\"\n                }\n            };\n        // case SEARCH_POST:\n        //     return {\n        //         ...state,\n        //         searchPostOption: {\n        //             orderBy:\n        //                 \"orderBy\" in action\n        //                     ? action.orderBy\n        //                     : state.searchPostOption.orderBy,\n        //             query:\n        //                 \"query\" in action\n        //                     ? action.query\n        //                     : state.searchPostOption.query,\n        //             filter:\n        //                 \"filter\" in action\n        //                     ? action.filter\n        //                     : state.searchPostOption.filter\n        //         }\n        //     };\n        // case EXPAND_NAVIGATION:\n        //     return {\n        //         ...state,\n        //         isCollapseNav: \"expand\"\n        //     };\n        // case CONTRACT_NAVIGATION:\n        //     return {\n        //         ...state,\n        //         isCollapseNav: \"contract\"\n        //     };\n        // case SET_IS_MOBILE:\n        //     return {\n        //         ...state,\n        //         isMobile: action.payload\n        //     };\n        case SET_BREAKPOINT:\n            return {\n                ...state,\n                breakpoint: action.breakpoint\n                // slidesToShow: action.slidesToShow\n            };\n        case SHOW_POST_DROPDOWN:\n            return {\n                ...state,\n                isShowPostDropdown: true,\n                activeDropdown: {\n                    offsetX: action.offsetX,\n                    offsetY: action.offsetY\n                }\n            };\n        case HIDE_POST_DROPDOWN:\n            return {\n                ...state,\n                isShowPostDropdown: false,\n                activeDropdown: {\n                    offsetX: -1,\n                    offsetY: -1\n                }\n            };\n        default:\n            return { ...state };\n    }\n}\n","import React, { useReducer, useContext, createContext } from \"react\";\nimport reducer from \"./reducer\";\n\nconst Context = createContext(null);\n\nconst DispatchContext = createContext(null);\n\n/**\n * 로컬 상태\n *\n * @property id                 - 사용자 ID\n * @property nickname           - 사용자 별칭\n * @property email              - 사용자 이메일\n * @property avatar             - 사용자 프로필 사진\n * @property isMaster           - 운영자 여부\n * @deprecated isShowNoticeModal  - 공지사항 팝업 보이기 여부\n * @property isShowAddPostModal - 게시물 추가 팝업 보이기 여부\n * @property isShowSearchBar    - 검색바 보이기 여부\n * @deprecated isShowFilterBar    - 검색 필터 보이기 여부\n * @property isShowLoginModal   - 로그인 팝업 보이기 여부\n * @property activePost         - 선택한 게시물 정보\n * @deprecated activeNotice       - 선택한 공지사항 정보\n * @deprecated searchPostOption   - 검색 옵션\n * @deprecated isCollapseNav      - 네비게이션 확장상태 (expand, contract)\n * @deprecated isMobile           - 모바일 환경 여부\n * @property breakpoint         - 브레이크 포인트\n * @property slidesToShow       - 캐러셀 노출 아이템 수\n * @property isShowPostDropdown   - 포스트 드롭다운 보이기 여부\n */\nconst initialState = {\n    id: null,\n    nickname: null,\n    email: null,\n    avatar: null,\n    isMaster: false,\n    // isShowNoticeModal: false,\n    isShowAddPostModal: false,\n    isShowSearchBar: false,\n    // isShowFilterBar: false,\n    isShowLoginModal: false,\n    isShowPostDropdown: false,\n    // isCollapseNav: \"contract\",\n    // isMobile: false, deprecated\n    breakpoint: \"wd\",\n    slidesToShow: 1,\n    activePost: {\n        id: \"\",\n        content: \"\",\n        category: \"\"\n    },\n    activeDropdown: {\n        offsetX: -1,\n        offsetY: -1\n    }\n    // activeNotice: {\n    //     id: \"\",\n    //     action: \"wait\",\n    //     actionText: \"비활성화\",\n    //     title: \"\",\n    //     description: \"\"\n    // },\n    // feedPostOption: {},\n    // searchPostOption: {\n    //     first: 30,\n    //     orderBy: \"createdAt_DESC\",\n    //     query: undefined,\n    //     category: undefined,\n    //     userId: undefined\n    // }\n};\n\n/**\n * 로컬 상태 제공 컴포넌트\n *\n */\nexport function ContextProvider({ children, context }) {\n    const [state, dispatch] = useReducer(reducer, {\n        ...initialState,\n        ...context\n    });\n\n    return (\n        <Context.Provider value={state}>\n            <DispatchContext.Provider value={dispatch}>\n                {children}\n            </DispatchContext.Provider>\n        </Context.Provider>\n    );\n}\n\n/**\n * Hooks - 로컬 상태 감시\n *\n */\nexport function useSelector() {\n    const state = useContext(Context);\n\n    if (!state) {\n        throw new Error(\"Provider is not defined\");\n    }\n\n    return state;\n}\n\n/**\n * Hooks - 로컬 상태 변경\n *\n */\nexport function useDispatch() {\n    const dispatch = useContext(DispatchContext);\n\n    if (!dispatch) {\n        throw new Error(\"Provider is not defined\");\n    }\n\n    return dispatch;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * 카테고리 랜더링 컴포넌트\n *\n * @param {string}  props.content 카테고리명\n * @param {boolean} props.isGap   간격 사용 여부\n */\nconst CategoryBtn = ({ content, isGap }) => {\n    const displayName = \"fr-category\";\n\n    return (\n        <li className={`${displayName}__wrapper`}>\n            <Link\n                className={`${displayName} ${\n                    isGap ? `${displayName}--multiple` : `${displayName}--alone`\n                }`}\n                to={`/category/${content}`}\n                aria-label={content}\n            >\n                <span tabIndex=\"-1\">{content}</span>\n            </Link>\n        </li>\n    );\n};\n\nexport default CategoryBtn;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * 프로필 사진 컴포넌트\n *\n * @param {string} props.userId  사용자 ID\n * @param {number} props.size    프로필 사진 크기\n * @param {string} props.src     이미지 자원\n */\nconst Avatar = ({ userId, size, src }) => (\n    <Link to={`/user/${userId}`}>\n        <div style={{ width: size, height: size }}>\n            <div className=\"fr-avatar\">\n                <div className=\"fr-avatar__body\">\n                    <img\n                        className=\"fr-avatar__image\"\n                        src={\n                            process.env.RAZZLE_BACKEND_ROOT +\n                            (src || process.env.RAZZLE_DEFAULT_AVATAR)\n                        }\n                        alt=\"avatar\"\n                    />\n                </div>\n            </div>\n        </div>\n    </Link>\n);\n\nexport default Avatar;\n","import { getStorage, TOKEN_KEY } from \"./cookie\";\nimport { SHOW_LOGIN_MODAL, SET_ME } from \"../context/action\";\n\nexport const graphqlError = ({ error, dispatch }) => {\n    alert(error.message);\n    // 로그인 체크\n    const token = getStorage(TOKEN_KEY);\n\n    if (token === null) {\n        if (dispatch) {\n            dispatch({\n                type: SET_ME,\n                id: null,\n                nickname: null,\n                email: null,\n                avatar: null,\n                isMaster: false\n            });\n\n            dispatch({\n                type: SHOW_LOGIN_MODAL\n            });\n        }\n    }\n};\n","module.exports = __webpack_public_path__ + \"static/media/speaker.ba8cfb3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.0d10f8f1.svg\";","import {\n    ApolloClient,\n    InMemoryCache,\n    createHttpLink,\n    ApolloLink\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { onError } from \"@apollo/client/link/error\";\nimport fetch from \"isomorphic-unfetch\";\nimport { TOKEN_KEY, getStorage, deleteStorage } from \"./cookie\";\n\n/**\n * 아폴로 클라이언트 객체\n * @type {object|null}\n */\nlet apolloClient = null;\n\n/**\n * 노드 환경에 fetch 추가\n */\nif (!process.browser) {\n    global.fetch = fetch;\n}\n\n/**\n * 아폴로 클라이언트 객체 생성 함수\n * @author frisk\n */\nfunction createApolloClient() {\n    /**\n     * http 연결을 통해 GraphQL 요청 및 응답 처리 활성화\n     */\n    const httpLink = createHttpLink({\n        uri: process.env.RAZZLE_BACKEND_GRAPHQL\n    });\n\n    /**\n     * 서버 오류, 네트워크 오류 및 GraphQL 오류 포착 및 처리\n     */\n    const errorLink = onError(({ graphQLErrors, networkError }) => {\n        if (graphQLErrors) {\n            graphQLErrors.map(({ message, path, extensions, ...props }) => {\n                console.log(`[GraphQL error] Query: ${path}, ${message}`);\n\n                if (extensions) {\n                    const { status } = extensions;\n\n                    if (status === 401) {\n                        deleteStorage(TOKEN_KEY);\n                    }\n                }\n            });\n        }\n        if (networkError) {\n            console.log(`[Network error]: ${networkError}`);\n        }\n    });\n\n    /**\n     * 요청 컨텍스트를 설정\n     */\n    const authLink = setContext((_, { headers }) => {\n        const token = getStorage(TOKEN_KEY);\n\n        return {\n            headers: {\n                ...headers,\n                Authorization: `Bearer ${token}`\n            }\n        };\n    });\n\n    return new ApolloClient({\n        connectToDevTools: process.browser,\n        ssrMode: !process.browser,\n        link: ApolloLink.from([errorLink, authLink, httpLink]),\n        cache: process.browser\n            ? new InMemoryCache().restore(window.__APOLLO_STATE__)\n            : new InMemoryCache()\n    });\n}\n\nexport function initializeApollo(initialState = null) {\n    const _apolloClient = apolloClient || createApolloClient();\n\n    // If your page has Next.js data fetching methods that use Apollo Client, the initial state\n    // gets hydrated here\n    if (initialState) {\n        // Get existing cache, loaded during client side data fetching\n        const existingCache = _apolloClient.extract();\n        // Restore the cache using the data passed from getStaticProps/getServerSideProps\n        // combined with the existing cached data\n        _apolloClient.cache.restore({ ...existingCache, ...initialState });\n    }\n    // For SSG and SSR always create a new Apollo Client\n    if (!process.browser) return _apolloClient;\n    // Create the Apollo Client once in the client\n    if (!apolloClient) apolloClient = _apolloClient;\n\n    return _apolloClient;\n}\n","import { gql } from \"@apollo/client\";\n\n/**\n * 로그인\n *\n * @param $email    이메일\n * @param $password 암호\n */\nexport const SIGN_IN = gql`\n    mutation logIn($email: String!, $password: String!) {\n        logIn(email: $email, password: $password) {\n            token\n            id\n            nickname\n            email\n            avatar\n            isMaster\n        }\n    }\n`;\n\n/**\n * 회원가입\n *\n * @param $email    이메일\n * @param $password 암호\n * @param $nickname 별칭\n * @param $avatar   프로필 사진\n */\nexport const SIGN_UP = gql`\n    mutation addUser(\n        $email: String!\n        $password: String!\n        $nickname: String!\n        $avatar: String\n    ) {\n        addUser(\n            email: $email\n            password: $password\n            nickname: $nickname\n            avatar: $avatar\n        )\n    }\n`;\n","import React from \"react\";\nimport { FormInput } from \"../Form\";\nimport Button from \"../button\";\nimport Loader from \"../Loader\";\n\n/**\n * 로그인 프레젠터 컴포넌트\n *\n * @param {boolean}  props.loading  로그인 요청 여부\n * @param {object}   props.email    이메일\n * @param {object}   props.password 암호\n * @param {function} props.onSubmit 요청 핸들러\n */\nconst SignInPresenter = ({ loading, email, password, onSubmit }) => (\n    <>\n        {loading && <Loader />}\n        <form onSubmit={onSubmit}>\n            <FormInput\n                type=\"email\"\n                placeholder=\"이메일을 입력하세요\"\n                id=\"email\"\n                autoComplete=\"off\"\n                required\n                label=\"이메일\"\n                isAlone={true}\n                {...email}\n            />\n            <FormInput\n                type=\"password\"\n                placeholder=\"암호를 입력하세요\"\n                id=\"password\"\n                autoComplete=\"off\"\n                label=\"암호\"\n                isAlone={true}\n                {...password}\n            />\n            <Button type=\"submit\">로그인</Button>\n        </form>\n    </>\n);\n\nexport default SignInPresenter;\n","import React, { useCallback } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useInput } from \"../../hooks\";\nimport { SIGN_IN } from \"../../graphql/mutation/user\";\nimport SignInPresenter from \"./SignInPresenter\";\nimport { TOKEN_KEY, setStorage } from \"../../lib/cookie\";\nimport { useDispatch } from \"../../context\";\nimport { SET_ME, HIDE_LOGIN_MODAL } from \"../../context/action\";\nimport { graphqlError } from \"../../lib/error\";\n\n/**\n * 로그인 컨테이너 컴포넌트\n *\n */\nconst SignInContainer = () => {\n    const dispatch = useDispatch();\n\n    const [login, { loading }] = useMutation(SIGN_IN);\n    // 이메일\n    const email = useInput(\"\");\n    // 암호\n    const password = useInput(\"\");\n    // 로그인 요청 핸들러\n    const handleSubmit = useCallback(\n        async (e) => {\n            e.preventDefault();\n            // 요청 중인 경우\n            if (loading) {\n                return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n            }\n\n            try {\n                const {\n                    data: { logIn }\n                } = await login({\n                    variables: {\n                        email: email.value,\n                        password: password.value\n                    }\n                });\n                if (logIn) {\n                    const {\n                        token,\n                        id,\n                        nickname,\n                        email,\n                        avatar,\n                        isMaster\n                    } = logIn;\n                    // 토큰 설정\n                    setStorage(TOKEN_KEY, token);\n                    // 로컬 상태에 내 정보 저장\n                    dispatch({\n                        type: SET_ME,\n                        id,\n                        nickname,\n                        email,\n                        avatar,\n                        isMaster\n                    });\n                    // 로그인 모달 숨기기\n                    dispatch({\n                        type: HIDE_LOGIN_MODAL\n                    });\n                }\n            } catch (error) {\n                graphqlError({ error });\n            }\n        },\n        [email.value, password.value, loading]\n    );\n\n    return (\n        <SignInPresenter\n            loading={loading}\n            email={email}\n            password={password}\n            onSubmit={handleSubmit}\n        />\n    );\n};\n\nexport default SignInContainer;\n","import React from \"react\";\nimport { FormInput } from \"../Form\";\nimport Button from \"../button\";\nimport Loader from \"../Loader\";\nimport { Thumbnail } from \"../../assets/icon\";\n\n/**\n * 회원가입 프레젠터 컴포넌트\n *\n * @param {boolean}      props.uploadLoading 업로드 요청 진행 여부\n * @param {boolean}      props.signUpLoading 회원가입 요청 진행 여부\n * @param {object}       props.nickname      별칭\n * @param {object}       props.email         이메일\n * @param {string}       props.preview       이미지 미리보기\n * @param {React.useRef} props.$file         file element\n * @param {function}     props.onChangeFile  파일 변경 핸들러\n * @param {function}     props.onClickFile   파일 클릭 핸들러\n * @param {function}     props.onSubmit      회원가입 요청 핸들러\n */\nconst SignUpPresenter = ({\n    uploadLoading,\n    signUpLoading,\n    nickname,\n    email,\n    password,\n    preview,\n    $file,\n    onChangeFile,\n    onClickFile,\n    onSubmit\n}) => {\n    return (\n        <>\n            {(uploadLoading || signUpLoading) && <Loader />}\n            <form onSubmit={onSubmit}>\n                <div\n                    className=\"fr-modal-auth__upload\"\n                    onClick={onClickFile}\n                    role=\"button\"\n                    tabIndex=\"0\"\n                >\n                    {preview ? (\n                        <img\n                            src={preview}\n                            alt=\"avatar\"\n                            title=\"변경하려면 클릭하세요.\"\n                        />\n                    ) : (\n                        <Thumbnail style={{ width: 100, height: 50 }} />\n                    )}\n\n                    <input\n                        type=\"file\"\n                        onChange={onChangeFile}\n                        ref={$file}\n                        hidden\n                        accept=\"image/jpg, image/jpeg, image/png, .gif\"\n                    />\n                </div>\n                <FormInput\n                    type=\"email\"\n                    placeholder=\"이메일을 입력하세요\"\n                    id=\"email\"\n                    autoComplete=\"off\"\n                    required\n                    isAlone={true}\n                    {...email}\n                    label=\"이메일\"\n                />\n                <FormInput\n                    type=\"password\"\n                    placeholder=\"암호를 입력하세요\"\n                    id=\"password\"\n                    autoComplete=\"off\"\n                    required\n                    isAlone={true}\n                    {...password}\n                    label=\"암호\"\n                />\n                <FormInput\n                    placeholder=\"닉네임을 입력하세요\"\n                    required\n                    id=\"nickname\"\n                    isAlone={true}\n                    {...nickname}\n                    autoComplete=\"off\"\n                    label=\"닉네임\"\n                />\n                <Button type=\"submit\">회원가입</Button>\n            </form>\n        </>\n    );\n};\n\nexport default SignUpPresenter;\n","import React, { useState, useCallback, useRef } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useInput, useLazyAxios } from \"../../hooks\";\nimport SignUpPresenter from \"./SignUpPresenter\";\nimport { SIGN_UP } from \"../../graphql/mutation/user\";\nimport { graphqlError } from \"../../lib/error\";\n\n/**\n * 회원가입 컨테이너 컴포넌트\n *\n * @param props.setAction 인증 화면 전환 모드 (로그인, 회원가입)\n */\nconst SignUpContainer = ({ setAction }) => {\n    // Axios hooks\n    const { loading: uploadLoading, call } = useLazyAxios();\n\n    const $file = useRef(null);\n    // 별명\n    const nickname = useInput(\"\");\n    // 이메일\n    const email = useInput(\"\");\n    // 암호\n    const password = useInput(\"\");\n    // 프로필사진 미리보기\n    const [preview, setPreview] = useState(\"\");\n    // 프로필사진 URL\n    const [avatar, setAvatar] = useState(\"\");\n    // 사용자 추가\n    const [signUp, { loading: signUpLoading }] = useMutation(SIGN_UP);\n    // 파일 업로드 핸들러\n    const handleChangeFile = useCallback(\n        async (e) => {\n            const { value, files } = e.target;\n            // 취소 버튼을 누른 경우\n            if (!value) {\n                return;\n            }\n            // 요청 중인 경우\n            if (uploadLoading) {\n                return;\n            }\n\n            const [file] = files;\n\n            const formData = new FormData();\n\n            formData.append(\"file\", file);\n\n            const { data, error } = await call({\n                method: \"post\",\n                url: `${process.env.RAZZLE_BACKEND_API}/upload`,\n                data: formData,\n                headers: { \"content-type\": \"multipart/form-data\" }\n            });\n\n            if (data) {\n                const reader = new FileReader();\n\n                reader.onloadend = () => {\n                    // 미리보기 상태 변경\n                    setPreview(reader.result);\n                    // 프로필사진 상태 변경\n                    setAvatar(data);\n                };\n\n                reader.readAsDataURL(file);\n            }\n\n            if (error) {\n                alert(error.response.data);\n            }\n        },\n        [uploadLoading]\n    );\n    // 업로드 클릭 핸들러\n    const handleClickFile = useCallback(() => {\n        const node = $file.current;\n        if (node) {\n            node.click();\n        }\n    }, []);\n    // 회원가입 요청 핸들러\n    const handleSubmit = useCallback(\n        async (e) => {\n            e.preventDefault();\n            // 회원가입 요청 중인 경우\n            if (signUpLoading) {\n                return alert(\"요청 중입니다. 잠시만 기다려주세요.\");\n            }\n\n            if (nickname.value.length > 9) {\n                return alert(\"별명은 10자 미만으로 입력 해주세요.\");\n            }\n\n            const tf = confirm(\"입력한 내용으로 회원가입 하시겠어요?\");\n\n            if (tf) {\n                try {\n                    const {\n                        data: { addUser }\n                    } = await signUp({\n                        variables: {\n                            email: email.value,\n                            password: password.value,\n                            nickname: nickname.value,\n                            avatar\n                        }\n                    });\n                    if (addUser) {\n                        alert(\"회원가입이 정상처리되었습니다.\");\n\n                        // 로그인 화면 전환\n                        setAction(\"login\");\n                    }\n                } catch (error) {\n                    graphqlError({ error });\n                }\n            }\n        },\n        [email.value, nickname.value, avatar, signUpLoading]\n    );\n\n    return (\n        <SignUpPresenter\n            uploadLoading={uploadLoading}\n            signUpLoading={signUpLoading}\n            nickname={nickname}\n            email={email}\n            password={password}\n            preview={preview}\n            $file={$file}\n            onChangeFile={handleChangeFile}\n            onClickFile={handleClickFile}\n            onSubmit={handleSubmit}\n        />\n    );\n};\n\nexport default SignUpContainer;\n","import React, { useState, useCallback } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport SignIn from \"./SignInContainer\";\nimport SignUp from \"./SignUpContainer\";\nimport { useDispatch } from \"../../context\";\nimport { HIDE_LOGIN_MODAL } from \"../../context/action\";\n\n/**\n * * 인증 팝업 컴포넌트\n *\n * @Component\n * @Modal\n * @author frisk\n */\nconst Auth = () => {\n    /**\n     * 로컬 상태 변경 모듈 활성화\n     */\n    const dispatch = useDispatch();\n    /**\n     * 화면 전환 상태 모듈 활성화\n     */\n    const [action, setAction] = useState(\"login\");\n    /**\n     * 팝업 숨기기 핸들러\n     */\n    const handleClose = useCallback(() => {\n        dispatch({\n            type: HIDE_LOGIN_MODAL\n        });\n    }, []);\n\n    return (\n        <Modal\n            onHide={handleClose}\n            show\n            animation={false}\n            contentClassName=\"fr-modal-auth\"\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    {action === \"login\" ? \"로그인\" : \"회원가입\"}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {action === \"signup\" ? (\n                    <SignUp setAction={setAction} />\n                ) : (\n                    <SignIn />\n                )}\n                <div className=\"fr-form__changer\">\n                    {action === \"login\" && (\n                        <div>\n                            계정이 없다면&nbsp;\n                            <span\n                                className=\"fr-form__link\"\n                                onClick={() => setAction(\"signup\")}\n                            >\n                                회원가입\n                            </span>\n                        </div>\n                    )}\n                    {action === \"signup\" && (\n                        <div>\n                            계정이 있다면&nbsp;\n                            <span\n                                className=\"fr-form__link\"\n                                onClick={() => setAction(\"login\")}\n                            >\n                                로그인\n                            </span>\n                        </div>\n                    )}\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default Auth;\n","// 내 정보 설정\nexport const SET_ME = \"SET_ME\";\n// 공지사항 팝업 보이기\n// export const SHOW_NOTICE_MODAL = \"SHOW_NOTICE_MODAL\";\n// 공지사항 팝업 숨기기\n// export const HIDE_NOTICE_MODAL = \"HIDE_NOTICE_MODAL\";\n// 로그인 팝업 보이기\nexport const SHOW_LOGIN_MODAL = \"SHOW_LOGIN_MODAL\";\n// 로그인 팝업 숨기기\nexport const HIDE_LOGIN_MODAL = \"HIDE_LOGIN_MODAL\";\n// 검색 바 보이기\nexport const SHOW_SEARCH_BAR = \"SHOW_SEARCH_BAR\";\n// 검색 바 숨기기\nexport const HIDE_SEARCH_BAR = \"HIDE_SEARCH_BAR\";\n// 검색 필터 보이기\n// export const SHOW_FILTER_BAR = \"SHOW_FILTER_BAR\";\n// 검색 필터 숨기기\n// export const HIDE_FILTER_BAR = \"HIDE_FILTER_BAR\";\n// 게시물 검색\n// export const SEARCH_POST = \"SEARCH_POST\";\n// 네비게이션 확장\n// export const EXPAND_NAVIGATION = \"EXPAND_NAVIGATION\";\n// 네비게이션 수축\n// export const CONTRACT_NAVIGATION = \"CONTRACT_NAVIGATION\";\n// 모바일 여부 설정\n// export const SET_IS_MOBILE = \"SET_IS_MOBILE\";\n// breakpoint 설정\nexport const SET_BREAKPOINT = \"SET_BREAKPOINT\";\n// 게시물 등록 팝업 보이기\nexport const SHOW_POST_MODAL = \"SHOW_POST_MODAL\";\n// 게시물 등록 팝업 숨기기\nexport const HIDE_POST_MODAL = \"HIDE_POST_MODAL\";\n// 게시물 드롭다운 팝업 보이기\nexport const SHOW_POST_DROPDOWN = \"SHOW_POST_DROPDOWN\";\n// 게시물 드롭다운 팝업 숨기기\nexport const HIDE_POST_DROPDOWN = \"HIDE_POST_DROPDOWN\";\n","import React from \"react\";\nimport { hydrate } from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { loadableReady } from \"@loadable/component\";\nimport { ContextProvider } from \"./context\";\nimport App from \"./App\";\nimport { initializeApollo } from \"./lib/apollo\";\n\nconst apolloClient = initializeApollo(\n    window !== \"undefined\" ? window.__APOLLO_STATE__ : null\n);\n\nconst container = document.getElementById(\"root\");\n/**\n * Wait for all loadable components to be loaded before rendering.\n * Beacuse Loadable components loads all our scripts asynchronously.\n */\nloadableReady(() => {\n    hydrate(\n        <ApolloProvider client={apolloClient}>\n            <ContextProvider\n                context={window !== \"undefined\" ? window.__CONTEXT_STATE__ : {}}\n            >\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </ContextProvider>\n        </ApolloProvider>,\n        container\n    );\n});\n\nif (module.hot) {\n    module.hot.accept();\n}\n","import { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getBreakpoint } from \"../lib/responsive\";\n\nexport const useInput = (defaultValue, where) => {\n    const [value, setValue] = useState(defaultValue);\n\n    const onChange = useCallback((e) => {\n        if (where === \"no_space\") {\n            setValue(e.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"));\n        } else {\n            setValue(e.target.value);\n        }\n    }, []);\n\n    return { value, onChange, setValue };\n};\n\nexport const useDebounce = (defaultValue, delay) => {\n    const [value, setValue] = useState(\"\");\n    const [state, setState] = useState(defaultValue);\n\n    useEffect(() => {\n        if (value === state) return;\n        const timeout = setTimeout(() => setValue(state), delay);\n\n        return () => clearTimeout(timeout);\n    }, [value, state]);\n\n    return [value, setState];\n};\n\nexport const useLazyAxios = () => {\n    const [loading, setLoading] = useState(false);\n\n    const call = useCallback(\n        async (options) => {\n            const result = {};\n            setLoading(true);\n            try {\n                const { data } = await axios(options);\n                result.data = data;\n            } catch (error) {\n                result.error = error;\n            }\n            setLoading(false);\n            return result;\n        },\n        [loading]\n    );\n\n    return { loading, call };\n};\n\nexport const useResize = () => {\n    const [breakpoint, setBreakpoint] = useState(false);\n\n    const handleResize = useCallback((e) => {\n        const { innerWidth } = e.target;\n\n        const { breakpoint } = getBreakpoint(innerWidth);\n\n        setBreakpoint(breakpoint);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", handleResize);\n\n        window.dispatchEvent(new Event(\"resize\"));\n\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return [breakpoint];\n};\n","export const getBreakpoint = (innerWidth) => {\n    let breakpoint = \"wd\";\n    const slidesToShow = 1;\n\n    if (innerWidth <= 1200) {\n        breakpoint = \"lg\";\n    }\n\n    if (innerWidth <= 992) {\n        breakpoint = \"md\";\n        // slidesToShow = 2;\n        // slidesToShow = 1;\n    }\n\n    if (innerWidth <= 768) {\n        breakpoint = \"sm\";\n        // slidesToShow = 1;\n    }\n\n    if (innerWidth <= 576) {\n        breakpoint = \"xs\";\n    }\n\n    return {\n        breakpoint,\n        slidesToShow\n    };\n};\n","import React, { useCallback, useRef } from \"react\";\nimport codeSyntaxHightlight from \"@toast-ui/editor-plugin-code-syntax-highlight\";\nimport hljs from \"highlight.js\";\nimport Loader from \"./Loader\";\nimport { useLazyAxios } from \"../hooks\";\n\nconst Editor =\n    typeof window !== \"undefined\" && require(\"@toast-ui/react-editor\").Editor;\n\n/**\n * * 게시물 에디터 컴포넌트\n *\n * @Component\n * @author frisk\n */\nconst PostEditor = (props) => {\n    const {\n        initialValue,\n        previewStyle,\n        height,\n        initialEditType,\n        useCommandShortcut,\n        onChange\n    } = props;\n\n    /**\n     * 업로드 요청을 위한 Axios 활성화\n     */\n    const { loading, call } = useLazyAxios();\n    /**\n     * editor element\n     */\n    const $editor = useRef();\n    /**\n     * 에디터 변경 이벤트\n     */\n    const handleChange = useCallback(() => {\n        const instance = $editor.current.getInstance();\n        /**\n         * 에디터 output\n         * 1. instance.getMarkdown(): markdown type\n         * 2. instance.getHtml(): html type\n         */\n        onChange({\n            markdown: instance.getMarkdown(),\n            description: instance.preview.el.innerText\n        });\n    }, [props]);\n\n    return (\n        <div className=\"fr-editor\">\n            {loading && <Loader />}\n            {typeof window !== \"undefined\" && (\n                <Editor\n                    {...props}\n                    plugins={[[codeSyntaxHightlight, { hljs }]]}\n                    initialValue={initialValue || \"\"}\n                    previewStyle={previewStyle || \"vertical\"}\n                    height={height || \"75vh\"}\n                    initialEditType={initialEditType || \"markdown\"}\n                    useCommandShortcut={useCommandShortcut || true}\n                    ref={$editor}\n                    onChange={handleChange}\n                    hooks={{\n                        addImageBlobHook: async (blob, callback) => {\n                            /**\n                             * 업로드 요청 중인 경우\n                             */\n                            if (loading) {\n                                alert(\"업로드 요청 중입니다.\");\n                                return;\n                            }\n\n                            const formData = new FormData();\n                            formData.append(\"file\", blob);\n\n                            const { data, error } = await call({\n                                method: \"post\",\n                                url: `${process.env.RAZZLE_BACKEND_API}/upload`,\n                                data: formData,\n                                headers: {\n                                    \"content-type\": \"multipart/form-data\"\n                                }\n                            });\n\n                            if (data) {\n                                const path =\n                                    process.env.RAZZLE_BACKEND_ROOT + data;\n\n                                callback(path, \"\");\n                            }\n\n                            if (error) {\n                                alert(\"썸네일 업로드 중 오류가 발생했습니다.\");\n                            }\n\n                            return false;\n                        }\n                    }}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default PostEditor;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { FormInput } from \"../Form\";\nimport Loader from \"../Loader\";\nimport Editor from \"../Editor\";\nimport CategoryBtn from \"../button/Category\";\n\n/**\n * 게시물 등록 모달 컨테이너 컴포넌트\n *\n * @param props.loading\n * @param props.category\n * @param props.setContent\n * @param props.onClose\n * @param props.onSubmit\n * @param props.onBlur\n */\nconst SetPostPresenter = ({\n    loading,\n    category,\n    setContent,\n    onClose,\n    onSubmit,\n    onChange\n}) => (\n    <Modal onHide={onClose} show animation={false}>\n        {loading && <Loader />}\n        <Modal.Header closeButton>\n            <Modal.Title>게시물 등록</Modal.Title>\n        </Modal.Header>\n        <form onSubmit={onSubmit}>\n            <Modal.Body>\n                <Editor\n                    height=\"50vh\"\n                    onChange={(content) => setContent(content)}\n                />\n                <FormInput\n                    placeholder=\"카테고리를 입력하세요\"\n                    id=\"category\"\n                    required\n                    autoComplete=\"off\"\n                    {...category}\n                    label=\"카테고리\"\n                    onChange={onChange}\n                >\n                    <ul style={{ marginLeft: 10, flex: 1 }}>\n                        {category.value.length > 0 && (\n                            <CategoryBtn content={category.value} />\n                        )}\n                    </ul>\n                </FormInput>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    취소\n                </Button>\n                <Button variant=\"primary\" type=\"submit\">\n                    등록\n                </Button>\n            </Modal.Footer>\n        </form>\n    </Modal>\n);\n\nexport default SetPostPresenter;\n","import React, { useCallback, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_POST } from \"../../graphql/mutation/post\";\nimport SetPostPresenter from \"./SetPostPresenter\";\nimport { useInput } from \"../../hooks\";\nimport { useDispatch } from \"../../context\";\nimport { HIDE_POST_MODAL } from \"../../context/action\";\nimport { TOKEN_KEY, getStorage } from \"../../lib/cookie\";\nimport { graphqlError } from \"../../lib/error\";\n\n/**\n * 게시물 등록 모달 컨테이너 컴포넌트\n *\n */\nconst SetPostContainer = () => {\n    const dispatch = useDispatch();\n    // 카테고리\n    const category = useInput(\"\", \"no_space\");\n    // 내용\n    const [_content, setContent] = useState(\"\");\n    // 게시물 추가\n    const [create, { loading }] = useMutation(CREATE_POST);\n    // 팝업 닫기 핸들러\n    const handleClose = useCallback(() => {\n        // 팝업 숨기기\n        dispatch({\n            type: HIDE_POST_MODAL\n        });\n    }, []);\n    const handleChange = useCallback(\n        (e) => {\n            const { value } = e.target;\n\n            if (value.length > 10) {\n                return alert(\"카테고리는 10자 미만으로 입력하세요.\");\n            }\n\n            category.setValue(value);\n        },\n        [category.value]\n    );\n    // 공지사항 등록 및 수정 핸들러\n    const handleSubmit = useCallback(\n        async (e) => {\n            e.preventDefault();\n            // 로그인 체크\n            const token = getStorage(TOKEN_KEY);\n\n            if (token === null) {\n                return dispatch({\n                    type: SHOW_LOGIN_MODAL\n                });\n            }\n\n            if (loading) {\n                return alert(\"요청 중입니다\");\n            }\n\n            const content = _content.markdown;\n\n            const tf = confirm(\"입력한 내용으로 게시물을 등록하시겠어요?\");\n\n            if (tf) {\n                try {\n                    const {\n                        data: { addPost }\n                    } = await create({\n                        variables: {\n                            content,\n                            category: category.value\n                        }\n                    });\n\n                    if (addPost) {\n                        alert(\"게시물이 등록되었습니다.\");\n                    }\n\n                    handleClose();\n                } catch (error) {\n                    graphqlError({ error, dispatch });\n                }\n            }\n        },\n        [loading, _content, category.value]\n    );\n\n    return (\n        <SetPostPresenter\n            loading={loading}\n            category={category}\n            setContent={setContent}\n            onClose={handleClose}\n            onSubmit={handleSubmit}\n            onChange={handleChange}\n        />\n    );\n};\n\nexport default SetPostContainer;\n","module.exports = __webpack_public_path__ + \"static/media/eye.043f9099.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment.a93a5733.svg\";"],"sourceRoot":""}